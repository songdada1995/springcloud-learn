server:
  port: 8087

spring:
  profiles:
    active: routes-mycloud-consumer2
  application:
    name: mycloud-gateway

  cloud:
#    # 配置中心
#    config:
#      fail-fast: true
#      name: ${spring.application.name}
#      profile: ${spring.profiles.active}
#      uri: http://localhost:8080

    #网关配置中心
    gateway:
      discovery:
        locator:  #路由访问方式：http://Gateway_HOST:Gateway_PORT/大写的serviceId/**，其中微服务应用名默认大写访问。
          enabled: true #是否与服务发现组件进行结合，通过 serviceId(必须设置成大写) 转发到具体的服务实例。默认为false，设为true便开启通过服务中心的自动根据 serviceId 创建路由的功能。
          lower-case-service-id: true #允许通过模块名小写代理
      routes:
        - id: routes-mycloud-consumer2
          uri: lb://mycloud-consumer2 #网关路由到springcloud-client模块，lb指向内部注册模块
          predicates: #转发谓词，用于设置匹配路由的规则
            - Path=/api_2/** #通过请求路径匹配
#            - Method=GET #通过请求方式匹配
#            - RemoteAddr=127.0.0.1/25 #通过请求id匹配，只有在某个 ip 区间号段的请求才会匹配路由，其中/后的是子网掩码
#            - After=2018-01-20T06:06:06+08:00[Asia/Shanghai] #根据时间进行匹配，在指定时间之后才会匹配路由
#            - Before=2018-01-20T06:06:06+08:00[Asia/Shanghai] #根据时间进行匹配，在指定时间之前才会匹配路由
#            - Between=2018-01-20T06:06:06+08:00[Asia/Shanghai], 2019-01-20T06:06:06+08:00[Asia/Shanghai] #根据时间段进行匹配，处于指定时间段才会匹配路由

          filters:
            - RequestTime=true #此处仅需要配置过滤器工厂前缀及其属性值启动即可（注意“-”后面一定要跟空格，否则报错）


  main:
    allow-bean-definition-overriding: true #是否允许同Bean覆盖

# 注册中心配置
eureka:
  instance:
    #优先使用IP地址注册
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: http://127.0.0.1:8080/eureka/

# 异步线程池配置
task:
  pool:
    corePoolSize: 10
    maxPoolSize: 20
    keepAliveTime: 300
    queueCapacity: 1000